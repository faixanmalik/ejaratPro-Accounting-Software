import Head from "next/head";
import { Col, Row } from "reactstrap";

import SalesChart from "@/panel/components/dashboard/SalesChart";
import TopCards from "@/panel/components/dashboard/TopCards";
import AssetsChart from "@/panel/components/dashboard/AssetsChart";
import UnitsChart from "@/panel/components/dashboard/UnitsChart";


import mongoose from "mongoose";
import Product from 'models/Product';
import Contact from "models/Contact";
import Charts from "models/Charts";
import JournalVoucher from "models/JournalVoucher";
import { ProSidebarProvider } from "react-pro-sidebar";
import FullLayout from "@/panel/layouts/FullLayout";
import Employees from "models/Employees";

import CreditSalesInvoice from 'models/CreditSalesInvoice';
import SalesInvoice from 'models/SalesInvoice';
import PurchaseInvoice from 'models/PurchaseInvoice';
import DebitNote from 'models/DebitNote';
import CreditNote from 'models/CreditNote';
import ReceiptVoucher from 'models/ReceiptVoucher';
import PaymentVoucher from 'models/PaymentVoucher';
import Expenses from 'models/Expenses';
import useTranslation from "next-translate/useTranslation";
import { useEffect, useState } from "react";
import Units from "models/Units";
import ChequesChart from "@/panel/components/dashboard/ChequesChart";
import Cheque from "models/Cheque";


export default function Home({customer, dbUnits, dbCheques, dbProducts, supplier, employees, dbExpensesVoucher, dbPaymentVoucher, dbReceiptVoucher, dbDebitNote, dbCreditNote, dbPurchaseInvoice, dbSalesInvoice, dbCreditSalesInvoice, dbJournalVoucher, dbCharts }) {

  const [filteredCustomer, setFilteredCustomer] = useState([])
  const [filteredSupplier, setFilteredSupplier] = useState([])
  const [filteredEmployees, setFilteredEmployees] = useState([])
  const [filteredProducts, setFilteredProducts] = useState([])

  const noOfCustomers = filteredCustomer.length;
  const noOfProducts = filteredProducts.length;
  const noOfSuppliers = filteredSupplier.length;
  const noOfEmployees = filteredEmployees.length;

  const [userEmail, setUserEmail] = useState('')

  const { t } = useTranslation('panel')

  useEffect(() => {
  

    let getUser = JSON.parse(localStorage.getItem("myUser"));
    let userEmail = getUser.businessName;
    if(getUser){
      setUserEmail(getUser)
    }

    let filteredCustomer = customer.filter((item)=>{
      return item.userEmail === userEmail;
    })
    setFilteredCustomer(filteredCustomer)
    
    let filteredSupplier = supplier.filter((item)=>{
      return item.userEmail === userEmail;
    })
    setFilteredSupplier(filteredSupplier)

    let filteredEmployees = employees.filter((item)=>{
      return item.userEmail === userEmail;
    })
    setFilteredEmployees(filteredEmployees)

    let filteredProducts = dbProducts.filter((item)=>{
      return item.userEmail === userEmail;
    })
    setFilteredProducts(filteredProducts)

  }, [])

  return (
    <>
    <ProSidebarProvider>
    <style jsx global>{`
        footer {
          display: none;
        }
        header {
          display: none;
        }
      `}
    </style>
    <FullLayout>
      <Head>
        <title>EjaratPro</title>
        <meta name="description" content="Generated by erp system" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {/***Top Cards***/}
        <Row>
          <Col sm="6" lg="3">
            <TopCards
              bg="bg-light-danger text-danger"
              href='/panel/businessSetup/productAndServices'
              title="Products"
              subtitle={t('totalProducts')}
              amount={noOfProducts}
              icon="bi bi-bag"
            />
          </Col>
          <Col sm="6" lg="3">
            <TopCards
              bg="bg-light-success text-success"
              href='/panel/businessSetup/contactList'
              title="Customer"
              subtitle={t('totalCustomers')}
              amount={noOfCustomers}
              icon="bi bi-people"
            />
          </Col>
          <Col sm="6" lg="3">
            <TopCards
              bg="bg-light-warning text-warning"
              href='/panel/businessSetup/contactList'
              title="Supplier"
              subtitle={t('totalSuppliers')}
              amount={noOfSuppliers}
              icon="bi bi-basket3"
            />
          </Col>
          <Col sm="6" lg="3">
            <TopCards
              bg="bg-light-info text-into"
              href='/panel/payroll/employees'
              title="Employees"
              subtitle={t('totalEmployees')}
              amount={noOfEmployees}
              icon="bi bi-people"
            />
          </Col>
        </Row>


        <Row>
          <Col sm="6" lg="6">
            <UnitsChart userEmail={userEmail} dbUnits={dbUnits} />
          </Col> 
          <Col sm="6" lg="6">
            <ChequesChart userEmail={userEmail} dbCheques={dbCheques} />
          </Col>
        </Row>


        {/***Sales & Feed***/}
        <Row className="mt-4">
          <Col sm="12" lg="12">
            <SalesChart dbProducts={dbProducts} userEmail={userEmail} dbCharts={dbCharts} dbJournalVoucher={dbJournalVoucher} dbExpensesVoucher={dbExpensesVoucher} dbPaymentVoucher={dbPaymentVoucher} dbReceiptVoucher={dbReceiptVoucher} dbDebitNote={dbDebitNote} dbCreditNote={dbCreditNote} dbPurchaseInvoice={dbPurchaseInvoice} dbSalesInvoice={dbSalesInvoice} dbCreditSalesInvoice={dbCreditSalesInvoice}/>
          </Col>
        </Row>

        <Row>
          <Col sm="12" lg="12">
            <AssetsChart dbProducts={dbProducts} userEmail={userEmail} dbCharts={dbCharts} dbJournalVoucher={dbJournalVoucher} dbExpensesVoucher={dbExpensesVoucher} dbPaymentVoucher={dbPaymentVoucher} dbReceiptVoucher={dbReceiptVoucher} dbDebitNote={dbDebitNote} dbCreditNote={dbCreditNote} dbPurchaseInvoice={dbPurchaseInvoice} dbSalesInvoice={dbSalesInvoice} dbCreditSalesInvoice={dbCreditSalesInvoice}/>
          </Col>
        </Row>


      </main>
      </FullLayout>
      </ProSidebarProvider>
    </>
  )
}


export async function getServerSideProps() {
  if (!mongoose.connections[0].readyState){
    mongoose.set("strictQuery", false);
    await mongoose.connect(process.env.MONGO_URI)
  }
  let customer = await Contact.find({"type": "Customer"})
  let supplier = await Contact.find({"type": "Supplier"})
  let employees = await Employees.find()
  let dbProducts = await Product.find()
  let dbUnits = await Units.find()
  let dbCheques = await Cheque.find()

  let dbCharts = await Charts.find()
  let dbJournalVoucher = await JournalVoucher.find()

  let dbCreditSalesInvoice = await CreditSalesInvoice.find()
  let dbSalesInvoice = await SalesInvoice.find()
  let dbPurchaseInvoice = await PurchaseInvoice.find()
  let dbDebitNote = await DebitNote.find()
  let dbCreditNote = await CreditNote.find()
  let dbReceiptVoucher = await ReceiptVoucher.find()
  let dbPaymentVoucher = await PaymentVoucher.find()
  let dbExpensesVoucher = await Expenses.find()
   
  // Pass data to the page via props
  return {
    props: {
      customer: JSON.parse(JSON.stringify(customer)),
      dbProducts: JSON.parse(JSON.stringify(dbProducts)),
      supplier: JSON.parse(JSON.stringify(supplier)),
      employees: JSON.parse(JSON.stringify(employees)),
      dbCharts: JSON.parse(JSON.stringify(dbCharts)),
      dbJournalVoucher: JSON.parse(JSON.stringify(dbJournalVoucher)),

      dbUnits: JSON.parse(JSON.stringify(dbUnits)),
      dbCheques: JSON.parse(JSON.stringify(dbCheques)),

      dbCreditSalesInvoice: JSON.parse(JSON.stringify(dbCreditSalesInvoice)),
      dbSalesInvoice: JSON.parse(JSON.stringify(dbSalesInvoice)),
      dbPurchaseInvoice: JSON.parse(JSON.stringify(dbPurchaseInvoice)),
      dbDebitNote: JSON.parse(JSON.stringify(dbDebitNote)),
      dbCreditNote: JSON.parse(JSON.stringify(dbCreditNote)),
      dbReceiptVoucher: JSON.parse(JSON.stringify(dbReceiptVoucher)),
      dbPaymentVoucher: JSON.parse(JSON.stringify(dbPaymentVoucher)),
      dbExpensesVoucher: JSON.parse(JSON.stringify(dbExpensesVoucher)),
    }
  }
}